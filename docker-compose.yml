version: '1'

services:
  web:
    container_name: back-link
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - rabbitmq
    networks:
      - main
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    restart: always
    command: python /app/manage.py runserver 0.0.0.0:8000

  db:
    container_name: postgres
    image: postgres:15
    restart: always
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=strong_pass
    volumes:
    - postgres_data:/var/lib/postgresql/data

  redis:
    container_name: redis
    image: redis:7.0.11
    ports:
      - "6379:6379"
    networks:
      - main
    restart: always
  
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.11
    ports:
      - "5672:5672"
    networks:
      - main
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
  
  nginx:
    container_name: nginx
    image: nginx:1.23
    ports:
      - "80:80"
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web

volumes:
  postgres_data:

networks:
  main:
